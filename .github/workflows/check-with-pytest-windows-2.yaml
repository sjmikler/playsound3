name: install locally and run pytest on Windows wmplayer

# This test fails on Windows server without audio devices
# So we don't run it automatically

#on:
#  workflow_dispatch

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]
    env:
      PLAYSOUND3_BACKEND: wmplayer

    steps:
      - uses: actions/checkout@v4

      # Add Windows Audio device
      - name: Print device
        run: Get-CimInstance Win32_SoundDevice | fl *
      - name: Install Scream
        shell: powershell
        run: |
          Start-Service audio*
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.6/Scream3.6.zip -OutFile C:\Scream3.6.zip
          Extract-7Zip -Path C:\Scream3.6.zip -DestinationPath C:\Scream
          $cert = (Get-AuthenticodeSignature C:\Scream\Install\driver\Scream.sys).SignerCertificate
          $store = [System.Security.Cryptography.X509Certificates.X509Store]::new("TrustedPublisher", "LocalMachine")
          $store.Open("ReadWrite")
          $store.Add($cert)
          $store.Close()
          cd C:\Scream\Install\driver
          C:\Scream\Install\helpers\devcon install Scream.inf *Scream
      - name: Print Audio Device
        run: Get-CimInstance Win32_SoundDevice | fl *

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install .
          pip install pytest

      - name: Check available backends
        run: |
          python -c "import playsound3; print(playsound3.AVAILABLE_BACKENDS)"

      - name: Test with pytest
        run: |
          pytest tests --log-cli-level=WARNING
